name: Linting

on: 
  workflow_dispatch:
  push:
    branches: 
      - main
  pull_request:
    paths-ignore:
      - '.github/**'
      - 'README.md'

jobs:
  lint-test:
    runs-on: ubuntu-latest
    container:
            image: quay.io/tjungbau/linter-image:v1.0.0
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run helm lint on found Charts
        run: |
          #!/usr/bin/env bash

          for charts in $(find . -name 'Chart.yaml'); do
            helm_dir=$(dirname "${charts}")
            echo "Checking $helm_dir"
            echo "Trying to find in-cluster-values.yaml files"
            add_val_files=$(find $helm_dir -type f -name in-cluster-values.yaml)
            if [ -z "$add_val_files" ]; then
                echo "No additional files found"
                values=""
            else
                echo "Additional file found $add_val_files"
                values="-f $add_val_files"
            fi

            helm lint --strict --with-subcharts $values "${helm_dir}"
            echo "Done"
          done

      - name: Run yamllint on all values-files
        run: |
          #!/usr/bin/env bash

          for values_files in $(find . -type f -name '*values.yaml'); do
            yamllint -c .yamllint.yaml ${values_files}; let var=var+$?
          done

          (exit $var)

      - name: Run kube-score
        run: |
          #!/usr/bin/env bash

          KUBESCORE_IGNORE_TESTS="${KUBESCORE_IGNORE_TESTS:-container-image-pull-policy,pod-networkpolicy}"
          RC=0

          for charts in $(find ~+ -name 'Chart.yaml'); do

            # get helm charts
            helm_dir=$(dirname "${charts}")
            helm_name=$(basename $helm_dir)

            # create tmp output for helm charts and do a "helm template"
            helm_output_dir=$(mktemp -d 2>/dev/null)
            helm template $helm_dir --output-dir $helm_output_dir/$helm_name
            [ ! -d "$helm_output_dir/$helm_name" ] && echo "Unable to resolve helm template" && exit 1

            # for all files in the output folder of the helm charts, do a kube-score
            find $helm_output_dir -name '*' -type f -exec cat {} \; | kube-score score --ignore-test ${KUBESCORE_IGNORE_TESTS} -
            if [ $? -gt 0 ]; then
              RC=1
            fi

            rm -rf $helm_output_dir
          done

          (exit $RC)

      - name: Run kube-linter
        run: |
          #!/usr/bin/env bash

          RC=0
          for charts in $(find . -name 'Chart.yaml'); do
            helm_dir=$(dirname "${charts}")

            kube-linter lint ${helm_dir} --config ".kube-linter.yaml"
            if [ $? -gt 0 ]; then
              RC=1
            fi
          done
          (exit $RC)
