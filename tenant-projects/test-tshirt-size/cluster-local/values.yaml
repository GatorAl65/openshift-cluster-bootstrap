# Example values files for a tenant onboarding
# It is a huge file and can help you creating:
#   - one or more namespaces including labels etc.
#   - local project admin group (in case groups are not created by other mechnics like LDAP Group Sync)
#   - GitOps (ArgoCD) Project, that limits allowed repos, clusters, permissions etc.
#   - Resource Quotas
#   - Limit Ranges
#   - Creation of default Network Policies (same namespace, OpenShift Monitoring & API Server, OpenShift Ingress, Egress Deny All)
#   - Creation of custom Network Policies
#
# This values file shows all possible settings. Most probably, you do not need to use everything.
# I tried to make is as configuratble as possible and most settings are working with defaults values and all can be disabled by setting "enabled" to false
#
# Most variables are handed over to the Sub-Chart: helper-proj-onboarding https://github.com/tjungbauer/helm-charts/tree/main/charts/helper-proj-onboarding

# Group that is allowed in RBAC. This group can either be created using this Helm Chart (will be named as <namespace>-admin) or must be known (for example synced via LDAP Group Sync)
oidc_groups: &oidc-group my-tshirt-size-app-admins

# Environment to which these values are valid, this should be the cluster name as defined in the values-global.yaml
# In best case the same is equal to the folder we are currntly in, but this is optional.
environment: &environment in-cluster

# Parameters handed over to Sub-Chart helper-proj-onboarding
helper-proj-onboarding:

  environment: *environment

  # List of namespaces this tenant shall manage.
  # A tenant or project may consist of multiple namespace
  namespaces:

    # Name of the first Namespace
    - name: &name my-tshirt-size-app

      # Is this Namespace enabled or not
      enabled: true

      project_size: "S"

      # Override specific quota settings individually
      resourceQuotas:
        limits:
          cpu: 10

      local_admin_group:
        enabled: true
        # group_name: my_group_name
        # optional parameter, default would be "admin"
        clusterrole: admin
        # List of users
        users:
          - mona
          - peter

      # Allowed repositories for this project, overwrites the default settings.
      # allowed_source_repos:
      #  - "https://my-personal-repo"
      #  - "https://my-second-personal-repo"

      # overwrite whatever default policy you would like
      # per default the following 5 are set
      default_policies:
      #  disable_allow_from_ingress: false
      #  disable_allow_from_monitoring: false
      #  disable_allow_from_same_namespace: false
      #  disable_allow_kube_apiserver: false
        disable_deny_all_egress: true  # This default policy will not be created, while the others will be.

      # Overwrite LimitRanges per project
      limitRanges:
        enabled: true
        container:
          max:
            cpu: 4
            memory: 10Gi
          min:
            cpu: 1
            memory: 100Mi
