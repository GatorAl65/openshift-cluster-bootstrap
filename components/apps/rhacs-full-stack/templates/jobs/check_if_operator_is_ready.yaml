apiVersion: batch/v1
kind: Job
metadata:
  name: check-operator-status
  namespace: stackrox
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
    argocd.argoproj.io/sync-wave: '1'
spec:
  template:
    spec:
      containers:
        - image: registry.redhat.io/ansible-automation-platform-21/ee-supported-rhel8:1.0
          command:
            - /bin/bash
            - -c
            - |
              #!/usr/bin/env bash
              # Wait for central to be ready
              attempt_counter=0
              max_attempts=20

              echo "Waiting for operator to be available..."

              # we assume that the operator is ready, once the CRD Central is available.
              # when this is the case ArgoCD can continue
              until $(oc get crd/centrals.platform.stackrox.io &>/dev/null); do
                  if [ ${attempt_counter} -eq ${max_attempts} ];then
                    echo "Max attempts reached. I give up"
                    exit 1
                  fi
                  attempt_counter=$(($attempt_counter+1))
                  echo "Made attempt $attempt_counter of $max_attempts, waiting..."
                  sleep 5
              done

              # turned out it takes even more time until operator is ready, so lets check the deployment
              deployments=(rhacs-operator-controller-manager)
              for i in "${deployments[@]}";
              do
                printf "\nWaiting for deployment $i\n";
                oc rollout status deployment $i -n rhacs-operator
              done

              echo "Operator seems to be ready"
          name: init-quay
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      terminationGracePeriodSeconds: 30
      serviceAccount: create-cluster-init
      serviceAccountName: create-cluster-init